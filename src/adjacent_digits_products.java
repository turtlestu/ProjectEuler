
public class adjacent_digits_products {

	/**
	 * @param args
	 */
	public static void main(String[] args) {
			//String line1 = "73167176531330624919225119674426574742355349194934";
			//String line1 = "96983520312774506326239578318016984801869478851843";
			String line1 = "85861560789112949495459501737958331952853208805511";
			
			String lines[]=new String[20];
			lines[0]="73167176531330624919225119674426574742355349194934";
			lines[1]="96983520312774506326239578318016984801869478851843";
			lines[2]="85861560789112949495459501737958331952853208805511";
			lines[3]="12540698747158523863050715693290963295227443043557";
			lines[4]="66896648950445244523161731856403098711121722383113";			
			lines[5]="62229893423380308135336276614282806444486645238749";
			lines[6]="30358907296290491560440772390713810515859307960866";
			lines[7]="70172427121883998797908792274921901699720888093776";
			lines[8]="65727333001053367881220235421809751254540594752243";
			lines[9]="52584907711670556013604839586446706324415722155397";
			lines[10]="53697817977846174064955149290862569321978468622482";
			lines[11]="83972241375657056057490261407972968652414535100474";
			lines[12]="82166370484403199890008895243450658541227588666881";
			lines[13]="16427171479924442928230863465674813919123162824586";
			lines[14]="17866458359124566529476545682848912883142607690042";
			lines[15]="24219022671055626321111109370544217506941658960408";
			lines[16]="07198403850962455444362981230987879927244284909188";
			lines[17]="84580156166097919133875499200524063689912560717606";
			lines[18]="05886116467109405077541002256983155200055935729725";
			lines[19]="71636269561882670428252483600823257530420752963450";
			System.out.println(line1);
			line1="";
			for(String s :lines){
				line1 += s;
			}
			System.out.println("line1 : " + line1);
			//long num_l1 = 1l; //length=50,last_index:49
			//num_l1=Integer.parseInt(line1);
			System.out.println();
			//­pºâ
			long max=0l;
			long temp=1l;
			for(int i =0;i<line1.length()-13;i++){				
				for(int j=i;j<i+13;j++){
					temp = temp * Integer.parseInt(line1.substring(j, j+1));
				}
				if(temp!=0)System.out.println("temp = " + temp);
				
				if(temp>max)
					max = temp;
				temp=1l;
			}
			System.out.println("max = "+max);
		}
	}
